{"version":3,"file":"static/js/704.5dd90081.chunk.js","mappings":"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","sources":["redux/contacts/selectors.js","components/ContactForm/ContactForm.styled.js","components/ContactForm/ContactForm.jsx","components/Filter/Filter.styled.js","components/Filter/Filter.jsx","components/ContactList/ContactList.styled.js","components/ContactList/Contact.jsx","components/ContactList/ContactList.jsx","pages/Contacts.js"],"sourcesContent":["import { createSelector } from '@reduxjs/toolkit';\n\nexport const getContacts = state => state.contacts.items;\nexport const getFilter = state => state.filter.filter;\nexport const getIsLoading = state => state.contacts.isLoading;\nexport const getError = state => state.contacts.error;\n\nexport const getVisibleContacts = createSelector(\n  [getContacts, getFilter],\n  (contacts, filter) => {\n    const normalizedFilter = filter.toLowerCase().trim();\n\n    const filteredContacts = contacts.filter(\n      ({ name, number }) =>\n        name.toLowerCase().includes(normalizedFilter) || number.includes(filter)\n    );\n\n    const sortedContacts = filteredContacts.sort((a, b) =>\n      a.name.localeCompare(b.name)\n    );\n\n    return sortedContacts;\n  }\n);\n","import styled from '@emotion/styled';\nimport { Form, Field } from 'formik';\n\nexport const FormList = styled(Form)`\n  display: flex;\n  flex-direction: column;\n  gap: 10px;\n  margin-bottom: 0px;\n`;\n\nexport const Input = styled(Field)`\n  width: 240px;\n  margin-top: 2px;\n  outline: none;\n  border: none;\n  border-radius: 8px;\n  height: 25px;\n  appearance: none;\n  transition: all 0.2s ease-in-out;\n\n  &:focus {\n    box-shadow: inset 1px 1px 2px #737171, inset -1px -1px 2px #737171;\n  }\n\n  @media screen and (max-width: 600px) {\n    width: 100%;\n    margin: 2px 0;\n  }\n`;\n\nexport const Button = styled.button`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  margin: auto;\n  outline: none;\n  border: none;\n  width: 100px;\n  height: 25px;\n  border-radius: 8px;\n  margin-bottom: 15px;\n  cursor: pointer;\n\n  &:focus,\n  :hover {\n    background-color: #00a226;\n    transform: scale(1.15);\n  }\n\n  &:active {\n    background-color: #18c20ef2;\n    transform: scale(0.95);\n  }\n\n  transition: all 0.2s ease-in-out;\n`;\n","import { useDispatch, useSelector } from 'react-redux';\n\nimport { contactsSelectors, contactsOperations } from 'redux/contacts';\n\nimport { Formik, ErrorMessage } from 'formik';\nimport { nanoid } from 'nanoid';\n\nimport { Notify } from 'notiflix';\n\nimport { Input, Button, FormList } from './ContactForm.styled';\n\nconst generateId = () => nanoid();\n\nconst initialValues = {\n  name: '',\n  number: '',\n};\n\nexport default function ContactForm() {\n  const dispatch = useDispatch();\n  const contacts = useSelector(contactsSelectors.getContacts);\n\n  const handleSubmit = ({ name, number }, { resetForm }) => {\n    if (\n      contacts.find(\n        contact => contact.name.toLowerCase() === name.toLowerCase()\n      ) ||\n      contacts.find(contact => contact.number === number)\n    ) {\n      Notify.warning(`\"${name}\" or \"${number}\" is already in contacts.`);\n      resetForm();\n      return;\n    }\n\n    dispatch(contactsOperations.addContact({ name, number }));\n    Notify.success(`Contact is \"${name}\" added`);\n    resetForm();\n  };\n\n  const nameInputId = generateId();\n  const numberInputId = generateId();\n\n  return (\n    <>\n      <Formik initialValues={initialValues} onSubmit={handleSubmit}>\n        <FormList autoComplete=\"on\">\n          <label htmlFor={nameInputId}>\n            <p>Name</p>\n            <Input\n              id={nameInputId}\n              type=\"text\"\n              name=\"name\"\n              placeholder=\"Full name\"\n              pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n              title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n              required\n            />\n            <ErrorMessage name=\"name\" />\n          </label>\n\n          <label htmlFor={numberInputId}>\n            <p>Number</p>\n            <Input\n              id={numberInputId}\n              type=\"tel\"\n              name=\"number\"\n              placeholder=\"111-11-11\"\n              pattern=\"\\+?\\d{0,3}[-.\\s]?\\(?\\d{1,3}\\)?[-.\\s]?\\d{1,3}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,12}\"\n              title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n              required\n            />\n            <ErrorMessage name=\"number\" />\n          </label>\n\n          <Button type=\"submit\">Add contact</Button>\n        </FormList>\n      </Formik>\n    </>\n  );\n}\n","import styled from '@emotion/styled';\n\nexport const Box = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  gap: 95px;\n  width: 420px;\n  margin-bottom: 10px;\n  padding-bottom: 10px;\n  border-bottom: 2px solid white;\n  @media only screen and (max-width: 768px) {\n    flex-direction: column;\n    justify-content: center;\n    gap: 25px;\n    text-align: center;\n  }\n`;\n\nexport const Label = styled.label`\n  display: flex;\n  flex-direction: column;\n  align-items: content;\n  @media only screen and (max-width: 768px) {\n    align-items: center;\n  }\n`;\n\nexport const Input = styled.input`\n  width: 200px;\n  margin-top: 6px;\n  outline: none;\n  border: none;\n  border-radius: 8px;\n  height: 25px;\n  appearance: none;\n  background-color: white;\n\n  transition: all 0.2s ease-in-out;\n  &:focus {\n    box-shadow: inset 1px 1px 2px #737171, inset -1px -1px 2px #737171;\n  }\n  @media only screen and (max-width: 768px) {\n    width: 100%;\n  }\n`;\n\nexport const Subtitle = styled.h2`\n  font-size: 34px;\n  margin-bottom: 12px;\n  @media only screen and (max-width: 768px) {\n    font-size: 24px;\n  }\n`;\n","import { useDispatch, useSelector } from 'react-redux';\n\nimport { contactsSelectors, filtersSlice } from 'redux/contacts';\n\nimport { Box, Label, Input, Subtitle } from './Filter.styled';\n\nexport default function Filter() {\n  const dispatch = useDispatch();\n  const filter = useSelector(contactsSelectors.getFilter) || '';\n  const contacts = useSelector(contactsSelectors.getContacts) || [];\n\n  const totalContacts = contacts.length;\n\n  const onChangeFilter = e => {\n    const { value } = e.target;\n    const trimmedValue = value.trim();\n\n    if (typeof trimmedValue === 'string') {\n      dispatch(filtersSlice.setFilter(trimmedValue));\n    }\n  };\n\n  return (\n    <>\n      <Subtitle>Contacts</Subtitle>\n      <Box>\n        {contacts.length ? (\n          <Label>\n            Find contacts by name:\n            <Input type=\"text\" value={filter} onChange={onChangeFilter} />\n          </Label>\n        ) : (\n          <p>Your phonebook is empty. Please add contact.</p>\n        )}\n\n        {contacts.length > 0 && <p>Total contacts: {totalContacts}</p>}\n      </Box>\n    </>\n  );\n}\n","import styled from '@emotion/styled';\nimport { RiDeleteBin2Line } from 'react-icons/ri';\n\nexport const List = styled.ul`\n  display: flex;\n  flex-direction: column;\n  gap: 8px;\n  width: 420px;\n  padding: 0;\n  @media only screen and (max-width: 768px) {\n    flex-direction: row;\n    flex-wrap: wrap;\n    justify-content: center;\n    align-items: flex-start;\n    height: 100vh;\n  }\n`;\n\nexport const Item = styled.li`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  min-width: 380px;\n\n  @media only screen and (max-width: 768px) {\n    min-width: 0;\n    width: 85%;\n    margin-right: 0;\n    margin-bottom: 8px;\n  }\n`;\n\nexport const Icon = styled(RiDeleteBin2Line)`\n  color: red;\n  cursor: pointer;\n`;\nexport const Box = styled.div`\n  display: flex;\n  gap: 50px;\n  max-width: 400px;\n`;\nexport const Name = styled.p`\n  width: 200px;\n  font-weight: 400;\n`;\nexport const Number = styled.p`\n  width: 150px;\n`;\n","import PropTypes from 'prop-types';\n\nimport { useDispatch } from 'react-redux';\n\nimport { contactsOperations } from 'redux/contacts';\n\nimport { Notify } from 'notiflix';\n\nimport { Icon, Box, Name, Number } from './ContactList.styled';\n\nexport default function Contact({ name, number, id }) {\n  const dispatch = useDispatch();\n\n  const handleDelete = () => {\n    dispatch(contactsOperations.deleteContact(id));\n    Notify.success(`\"${name}\" has been deleted.`);\n  };\n\n  return (\n    <>\n      <Box>\n        <Name>{name}</Name>\n        <Number>{number}</Number>\n      </Box>\n\n      <Icon\n        onClick={handleDelete}\n        size=\"22px\"\n        title=\"Delete contact\"\n        aria-label=\"Delete contact\"\n      />\n    </>\n  );\n}\n\nContact.propTypes = {\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n  id: PropTypes.string.isRequired,\n};\n","import { useSelector } from 'react-redux';\n\nimport { contactsSelectors } from 'redux/contacts';\n\nimport Loader from 'components/Loader';\nimport Contact from './Contact';\n\nimport { List, Item } from './ContactList.styled';\n\nexport default function ContactList() {\n  const visibleContacts = useSelector(contactsSelectors.getVisibleContacts);\n\n  const isLoading = useSelector(contactsSelectors.getIsLoading);\n  const error = useSelector(contactsSelectors.getError);\n\n  return (\n    <>\n      {isLoading ? (\n        <Loader />\n      ) : (\n        error && (\n          <p style={{ color: 'red' }}>\n            Sorry, something went wrong, try again.\n          </p>\n        )\n      )}\n      <List>\n        {visibleContacts.map(({ id, name, number }) => (\n          <Item key={id}>\n            <Contact name={name} number={number} id={id} />\n          </Item>\n        ))}\n      </List>\n    </>\n  );\n}\n","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { contactsSelectors, contactsOperations } from 'redux/contacts';\nimport ContactForm from 'components/ContactForm';\nimport Filter from 'components/Filter/Filter';\nimport ContactList from 'components/ContactList/ContactList';\nimport Loader from 'components/Loader';\nimport { Box, useTheme } from '@mui/material';\n\nexport default function Contacts() {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(contactsSelectors.getIsLoading);\n  const theme = useTheme();\n\n  useEffect(() => {\n    dispatch(contactsOperations.fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <Box\n      sx={{\n        display: 'flex',\n        justifyContent: 'space-evenly',\n\n        [theme.breakpoints.down('sm')]: {\n          gap: 2,\n          flexDirection: 'column',\n          alignItems: 'center',\n        },\n        [theme.breakpoints.up('sm')]: {\n          gap: 6,\n          alignItems: 'start',\n        },\n      }}\n    >\n      <Box\n        sx={{\n          display: 'flex',\n          justifyContent: 'center',\n          alignItems: 'center',\n          flexDirection: 'column',\n          mt: 3,\n        }}\n      >\n        <ContactForm />\n      </Box>\n      <Box\n        sx={{\n          display: 'flex',\n          justifyContent: 'center',\n          alignItems: 'center',\n          flexDirection: 'column',\n          mt: 3,\n        }}\n      >\n        <Filter />\n        {isLoading && <Loader />}\n        <ContactList />\n      </Box>\n    </Box>\n  );\n}\n"],"names":["getContacts","state","contacts","items","getFilter","filter","getIsLoading","isLoading","getError","error","getVisibleContacts","createSelector","normalizedFilter","toLowerCase","trim","name","number","includes","sort","a","b","localeCompare","FormList","styled","Form","Input","Field","Button","generateId","nanoid","initialValues","ContactForm","dispatch","useDispatch","useSelector","contactsSelectors","nameInputId","numberInputId","onSubmit","resetForm","find","contact","Notify","contactsOperations","autoComplete","htmlFor","id","type","placeholder","pattern","title","required","Box","Label","Subtitle","Filter","totalContacts","length","value","onChange","e","trimmedValue","target","filtersSlice","setFilter","List","Item","Icon","RiDeleteBin2Line","Name","Number","Contact","onClick","size","ContactList","visibleContacts","Loader","style","color","map","Contacts","theme","useTheme","useEffect","sx","display","justifyContent","breakpoints","down","gap","flexDirection","alignItems","up","mt"],"sourceRoot":""}