{"version":3,"file":"static/js/955.62f153d1.chunk.js","mappings":"0OAEaA,EAAc,SAAAC,GAAK,OAAIA,EAAMC,SAASC,KAAnB,EACnBC,EAAY,SAAAH,GAAK,OAAIA,EAAMI,OAAOA,MAAjB,EACjBC,EAAe,SAAAL,GAAK,OAAIA,EAAMC,SAASK,SAAnB,EACpBC,EAAW,SAAAP,GAAK,OAAIA,EAAMC,SAASO,KAAnB,EAEhBC,GAAqBC,EAAAA,EAAAA,IAChC,CAACX,EAAaI,IACd,SAACF,EAAUG,GACT,IAAMO,EAAmBP,EAAOQ,cAAcC,OAW9C,OATyBZ,EAASG,QAChC,gBAAGU,EAAH,EAAGA,KAAMC,EAAT,EAASA,OAAT,OACED,EAAKF,cAAcI,SAASL,IAAqBI,EAAOC,SAASZ,EADnE,IAIsCa,MAAK,SAACC,EAAGC,GAAJ,OAC3CD,EAAEJ,KAAKM,cAAcD,EAAEL,KADoB,GAK9C,I,gFCXGO,EAAa,kBAAMC,EAAAA,EAAAA,KAAN,EAEJ,SAASC,IACtB,IAAMC,GAAWC,EAAAA,EAAAA,MACXxB,GAAWyB,EAAAA,EAAAA,IAAYC,GAwBvBC,EAAcP,IACdQ,EAAgBR,IAEtB,OACE,SAACS,EAAA,EAAD,CACEC,SAAS,KACTC,GAAI,CACFC,SAAU,WACVF,SAAU,IACVG,SAAU,KALd,UAQE,UAACJ,EAAA,EAAD,CACEK,UAAU,OACVC,SApCe,SAAAC,GACnBA,EAAEC,iBACF,IAAMC,EAAOF,EAAEG,cACT1B,EAAOyB,EAAKE,SAAS3B,KAAK4B,MAC1B3B,EAASwB,EAAKE,SAAS1B,OAAO2B,MAEpC,GACEzC,EAAS0C,MACP,SAAAC,GAAO,OAAIA,EAAQ9B,KAAKF,gBAAkBE,EAAKF,aAAxC,KAETX,EAAS0C,MAAK,SAAAC,GAAO,OAAIA,EAAQ7B,SAAWA,CAAvB,IAIrB,OAFA8B,EAAAA,OAAAA,QAAA,WAAmB/B,EAAnB,iBAAgCC,EAAhC,mCACAwB,EAAKO,QAIPtB,EAASuB,EAAAA,WAA8B,CAAEjC,KAAAA,EAAMC,OAAAA,KAC/C8B,EAAAA,OAAAA,QAAA,sBAA8B/B,EAA9B,YACAyB,EAAKO,OACN,EAiBKd,GAAI,CACFgB,QAAS,OACTC,cAAe,UALnB,WAQE,SAACC,EAAA,EAAD,CACEC,OAAO,SACPC,UAAQ,EACRC,SAAO,EACPC,MAAM,YACNC,WAAY,CAAEC,MAAO,CAAEF,MAAO,UAC9BG,GAAI7B,EACJ8B,MAAM,OACN5C,KAAK,OACL6C,aAAa,OACbC,YAAY,YACZC,WAAS,EACTC,QAAQ,yHACRC,MAAM,4IAER,SAACb,EAAA,EAAD,CACEO,GAAI5B,EACJsB,OAAO,SACPE,SAAO,EACPC,MAAM,YACNC,WAAY,CAAEC,MAAO,CAAEF,MAAO,UAC9BI,MAAM,SACNM,KAAK,SACLlD,KAAK,SACL8C,YAAY,YACZE,QAAQ,wGACRC,MAAM,+FACNX,UAAQ,EACRa,gBAAiB,CACfC,QAAQ,MAIZ,SAACC,EAAA,EAAD,CAAQH,KAAK,SAASI,QAAQ,YAAYpC,GAAI,CAAEqC,GAAI,EAAGC,GAAI,GAA3D,6BAMP,C,2BChGYC,EAAOC,EAAAA,EAAAA,IAAH,0WAiBJC,EAAWD,EAAAA,EAAAA,GAAH,8ICXN,SAASE,IACtB,IAAMlD,GAAWC,EAAAA,EAAAA,MACXrB,GAASsB,EAAAA,EAAAA,IAAYC,IAAgC,GACrD1B,GAAWyB,EAAAA,EAAAA,IAAYC,IAAkC,GAEzDgD,EAAgB1E,EAAS2E,OAW/B,OACE,iCACE,SAACH,EAAD,wBACA,UAACF,EAAD,WACGtE,EAAS2E,QACR,SAAC9C,EAAA,EAAD,CAAKK,UAAU,OAAOO,MAAOtC,EAAQyE,SAdtB,SAAAxC,GACrB,IACMyC,EADYzC,EAAE0C,OAAZrC,MACmB7B,OAEC,kBAAjBiE,GACTtD,EAASwD,EAAaC,UAAUH,GAEnC,EAOO,UACE,SAAC5B,EAAA,EAAD,CACElB,GAAI,CAAEkD,EAAG,GACTxB,MAAM,wBACNJ,MAAM,YACND,SAAO,EACPe,QAAQ,WACRjB,OAAO,SACPgC,WAAS,EACTtB,WAAS,EACTN,WAAY,CACVC,MAAO,CAAEF,MAAO,QAAS8B,MAAO,QAASC,OAAQ,cAKvD,wEAGDpF,EAAS2E,OAAS,IAAK,4CAAoBD,UAInD,C,oCCjDYW,EAAOd,EAAAA,EAAAA,GAAH,qYAqBJe,EAAOf,EAAAA,EAAAA,GAAH,mQAcJgB,GAAOhB,EAAAA,EAAAA,GAAOiB,EAAAA,IAAPjB,CAAH,2DAKJ1C,EAAM0C,EAAAA,EAAAA,IAAH,6EAMHkB,EAAOlB,EAAAA,EAAAA,EAAH,kEAKJmB,EAASnB,EAAAA,EAAAA,EAAH,6CChDJ,SAASoB,EAAT,GAAwC,IAArB9E,EAAoB,EAApBA,KAAMC,EAAc,EAAdA,OAAQ0C,EAAM,EAANA,GACxCjC,GAAWC,EAAAA,EAAAA,MAOjB,OACE,iCACE,UAAC,EAAD,YACE,SAACiE,EAAD,UAAO5E,KACP,SAAC,EAAD,UAASC,QAGX,SAACyE,EAAD,CACEK,QAbe,WACnBrE,EAASuB,EAAAA,cAAiCU,IAC1CZ,EAAAA,OAAAA,QAAA,WAAmB/B,EAAnB,uBACD,EAWKgF,KAAK,OACL/B,MAAM,iBACN,aAAW,qBAIlB,CCvBc,SAASgC,IACtB,IAAMC,GAAkBtE,EAAAA,EAAAA,IAAYC,GAE9BrB,GAAYoB,EAAAA,EAAAA,IAAYC,GACxBnB,GAAQkB,EAAAA,EAAAA,IAAYC,GAE1B,OACE,gCACGrB,GACC,SAAC2F,EAAA,EAAD,IAEAzF,IACE,cAAGgD,MAAO,CAAEF,MAAO,OAAnB,sDAKJ,SAACgC,EAAD,UACGU,EAAgBE,KAAI,gBAAGzC,EAAH,EAAGA,GAAI3C,EAAP,EAAOA,KAAMC,EAAb,EAAaA,OAAb,OACnB,SAACwE,EAAD,WACE,SAACK,EAAD,CAAS9E,KAAMA,EAAMC,OAAQA,EAAQ0C,GAAIA,KADhCA,EADQ,QAQ5B,C,cCvBc,SAAS0C,IAAY,IAAD,EAC3B3E,GAAWC,EAAAA,EAAAA,MACXnB,GAAYoB,EAAAA,EAAAA,IAAYC,GACxByE,GAAQC,EAAAA,EAAAA,KAMd,OAJAC,EAAAA,EAAAA,YAAU,WACR9E,EAASuB,EAAAA,gBACV,GAAE,CAACvB,KAGF,UAACM,EAAA,EAAD,CACEE,IAAE,GACAgB,QAAS,OACTuD,eAAgB,iBAFhB,SAICH,EAAMI,YAAYC,KAAK,MAAQ,CAC9BC,IAAK,EACLzD,cAAe,SACf0D,WAAY,YAPd,SASCP,EAAMI,YAAYI,GAAG,MAAQ,CAC5BF,IAAK,EACLC,WAAY,UAXd,GADJ,WAgBE,SAAC7E,EAAA,EAAD,CACEE,GAAI,CACFgB,QAAS,OACTuD,eAAgB,SAChBI,WAAY,SACZ1D,cAAe,SACfoB,GAAI,GANR,UASE,SAAC9C,EAAD,OAEF,UAACO,EAAA,EAAD,CACEE,GAAI,CACFgB,QAAS,OACTuD,eAAgB,SAChBI,WAAY,SACZ1D,cAAe,SACfoB,GAAI,GANR,WASE,SAACK,EAAD,IACCpE,IAAa,SAAC2F,EAAA,EAAD,KACd,SAACF,EAAD,SAIP,C","sources":["redux/contacts/selectors.js","components/ContactForm.jsx","components/Filter/Filter.styled.js","components/Filter/Filter.jsx","components/ContactList/ContactList.styled.js","components/ContactList/Contact.jsx","components/ContactList/ContactList.jsx","pages/Contacts.js"],"sourcesContent":["import { createSelector } from '@reduxjs/toolkit';\n\nexport const getContacts = state => state.contacts.items;\nexport const getFilter = state => state.filter.filter;\nexport const getIsLoading = state => state.contacts.isLoading;\nexport const getError = state => state.contacts.error;\n\nexport const getVisibleContacts = createSelector(\n  [getContacts, getFilter],\n  (contacts, filter) => {\n    const normalizedFilter = filter.toLowerCase().trim();\n\n    const filteredContacts = contacts.filter(\n      ({ name, number }) =>\n        name.toLowerCase().includes(normalizedFilter) || number.includes(filter)\n    );\n\n    const sortedContacts = filteredContacts.sort((a, b) =>\n      a.name.localeCompare(b.name)\n    );\n\n    return sortedContacts;\n  }\n);\n","import { useDispatch, useSelector } from 'react-redux';\nimport { contactsSelectors, contactsOperations } from 'redux/contacts';\n\nimport * as React from 'react';\nimport Box from '@mui/material/Box';\nimport TextField from '@mui/material/TextField';\nimport Button from '@mui/material/Button';\n\nimport { nanoid } from 'nanoid';\nimport { Notify } from 'notiflix';\n\nconst generateId = () => nanoid();\n\nexport default function ContactForm() {\n  const dispatch = useDispatch();\n  const contacts = useSelector(contactsSelectors.getContacts);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const form = e.currentTarget;\n    const name = form.elements.name.value;\n    const number = form.elements.number.value;\n\n    if (\n      contacts.find(\n        contact => contact.name.toLowerCase() === name.toLowerCase()\n      ) ||\n      contacts.find(contact => contact.number === number)\n    ) {\n      Notify.warning(`\"${name}\" or \"${number}\" is already in contacts.`);\n      form.reset();\n      return;\n    }\n\n    dispatch(contactsOperations.addContact({ name, number }));\n    Notify.success(`Contact is \"${name}\" added`);\n    form.reset();\n  };\n\n  const nameInputId = generateId();\n  const numberInputId = generateId();\n\n  return (\n    <Box\n      maxWidth=\"xs\"\n      sx={{\n        position: 'relative',\n        maxWidth: 300,\n        minWidth: 270,\n      }}\n    >\n      <Box\n        component=\"form\"\n        onSubmit={handleSubmit}\n        sx={{\n          display: 'flex',\n          flexDirection: 'column',\n        }}\n      >\n        <TextField\n          margin=\"normal\"\n          required\n          focused\n          color=\"secondary\"\n          InputProps={{ style: { color: 'white' } }}\n          id={nameInputId}\n          label=\"Name\"\n          name=\"name\"\n          autoComplete=\"name\"\n          placeholder=\"Full name\"\n          autoFocus\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n        />\n        <TextField\n          id={numberInputId}\n          margin=\"normal\"\n          focused\n          color=\"secondary\"\n          InputProps={{ style: { color: 'white' } }}\n          label=\"Number\"\n          type=\"number\"\n          name=\"number\"\n          placeholder=\"111-11-11\"\n          pattern=\"\\+?\\d{0,3}[-.\\s]?\\(?\\d{1,3}\\)?[-.\\s]?\\d{1,3}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,12}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n          InputLabelProps={{\n            shrink: true,\n          }}\n        />\n\n        <Button type=\"submit\" variant=\"contained\" sx={{ mt: 2, mb: 2 }}>\n          Add contact\n        </Button>\n      </Box>\n    </Box>\n  );\n}\n","import styled from '@emotion/styled';\n\nexport const Desk = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  gap: 100px;\n  width: 420px;\n  margin-bottom: 10px;\n  padding-bottom: 10px;\n  border-bottom: 2px solid white;\n  @media only screen and (max-width: 600px) {\n    flex-direction: column;\n    justify-content: center;\n    gap: 25px;\n    text-align: center;\n  }\n`;\n\nexport const Subtitle = styled.h2`\n  font-size: 34px;\n  margin-bottom: 20px;\n  @media only screen and (max-width: 600px) {\n    font-size: 24px;\n  }\n`;\n","import { useDispatch, useSelector } from 'react-redux';\nimport { contactsSelectors, filtersSlice } from 'redux/contacts';\nimport { Desk, Subtitle } from './Filter.styled';\n\nimport * as React from 'react';\nimport TextField from '@mui/material/TextField';\nimport Box from '@mui/material/Box';\n\nexport default function Filter() {\n  const dispatch = useDispatch();\n  const filter = useSelector(contactsSelectors.getFilter) || '';\n  const contacts = useSelector(contactsSelectors.getContacts) || [];\n\n  const totalContacts = contacts.length;\n\n  const onChangeFilter = e => {\n    const { value } = e.target;\n    const trimmedValue = value.trim();\n\n    if (typeof trimmedValue === 'string') {\n      dispatch(filtersSlice.setFilter(trimmedValue));\n    }\n  };\n\n  return (\n    <>\n      <Subtitle>Contacts</Subtitle>\n      <Desk>\n        {contacts.length ? (\n          <Box component=\"form\" value={filter} onChange={onChangeFilter}>\n            <TextField\n              sx={{ m: 0 }}\n              label=\"Find contacts by name\"\n              color=\"secondary\"\n              focused\n              variant=\"outlined\"\n              margin=\"normal\"\n              fullWidth\n              autoFocus\n              InputProps={{\n                style: { color: 'white', width: '200px', height: '35px' },\n              }}\n            />\n          </Box>\n        ) : (\n          <p>Your phonebook is empty. Please add contact.</p>\n        )}\n\n        {contacts.length > 0 && <p>Total contacts: {totalContacts}</p>}\n      </Desk>\n    </>\n  );\n}\n","import styled from '@emotion/styled';\nimport { RiDeleteBin2Line } from 'react-icons/ri';\n\nexport const List = styled.ul`\n  display: flex;\n  flex-direction: column;\n  gap: 8px;\n  width: 420px;\n  padding: 0;\n\n  @media only screen and (max-width: 600px) {\n    flex-direction: row;\n    flex-wrap: wrap;\n    justify-content: center;\n    align-items: flex-start;\n    height: 100vh;\n    width: 100%;\n  }\n\n  @media only screen and (min-width: 769px) {\n    margin: 0 auto;\n  }\n`;\n\nexport const Item = styled.li`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  min-width: 380px;\n\n  @media only screen and (max-width: 768px) {\n    min-width: 0;\n    width: 85%;\n    margin-right: 0;\n    margin-bottom: 8px;\n  }\n`;\n\nexport const Icon = styled(RiDeleteBin2Line)`\n  color: red;\n  cursor: pointer;\n`;\n\nexport const Box = styled.div`\n  display: flex;\n  gap: 50px;\n  max-width: 400px;\n`;\n\nexport const Name = styled.p`\n  max-width: 200px;\n  font-weight: 400;\n`;\n\nexport const Number = styled.p`\n  max-width: 150px;\n`;\n","import PropTypes from 'prop-types';\nimport { useDispatch } from 'react-redux';\nimport { contactsOperations } from 'redux/contacts';\nimport { Notify } from 'notiflix';\nimport { Icon, Box, Name, Number } from './ContactList.styled';\n\nexport default function Contact({ name, number, id }) {\n  const dispatch = useDispatch();\n\n  const handleDelete = () => {\n    dispatch(contactsOperations.deleteContact(id));\n    Notify.success(`\"${name}\" has been deleted.`);\n  };\n\n  return (\n    <>\n      <Box>\n        <Name>{name}</Name>\n        <Number>{number}</Number>\n      </Box>\n\n      <Icon\n        onClick={handleDelete}\n        size=\"22px\"\n        title=\"Delete contact\"\n        aria-label=\"Delete contact\"\n      />\n    </>\n  );\n}\n\nContact.propTypes = {\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n  id: PropTypes.string.isRequired,\n};\n","import { useSelector } from 'react-redux';\nimport { contactsSelectors } from 'redux/contacts';\nimport Loader from 'components/Loader';\nimport Contact from './Contact';\nimport { List, Item } from './ContactList.styled';\n\nexport default function ContactList() {\n  const visibleContacts = useSelector(contactsSelectors.getVisibleContacts);\n\n  const isLoading = useSelector(contactsSelectors.getIsLoading);\n  const error = useSelector(contactsSelectors.getError);\n\n  return (\n    <>\n      {isLoading ? (\n        <Loader />\n      ) : (\n        error && (\n          <p style={{ color: 'red' }}>\n            Sorry, something went wrong, try again.\n          </p>\n        )\n      )}\n      <List>\n        {visibleContacts.map(({ id, name, number }) => (\n          <Item key={id}>\n            <Contact name={name} number={number} id={id} />\n          </Item>\n        ))}\n      </List>\n    </>\n  );\n}\n","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { contactsSelectors, contactsOperations } from 'redux/contacts';\nimport ContactForm from 'components/ContactForm';\nimport Filter from 'components/Filter/Filter';\nimport ContactList from 'components/ContactList/ContactList';\nimport Loader from 'components/Loader';\nimport { Box, useTheme } from '@mui/material';\n\nexport default function Contacts() {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(contactsSelectors.getIsLoading);\n  const theme = useTheme();\n\n  useEffect(() => {\n    dispatch(contactsOperations.fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <Box\n      sx={{\n        display: 'flex',\n        justifyContent: 'space-evenly',\n\n        [theme.breakpoints.down('sm')]: {\n          gap: 2,\n          flexDirection: 'column',\n          alignItems: 'center',\n        },\n        [theme.breakpoints.up('sm')]: {\n          gap: 6,\n          alignItems: 'start',\n        },\n      }}\n    >\n      <Box\n        sx={{\n          display: 'flex',\n          justifyContent: 'center',\n          alignItems: 'center',\n          flexDirection: 'column',\n          mt: 3,\n        }}\n      >\n        <ContactForm />\n      </Box>\n      <Box\n        sx={{\n          display: 'flex',\n          justifyContent: 'center',\n          alignItems: 'center',\n          flexDirection: 'column',\n          mt: 3,\n        }}\n      >\n        <Filter />\n        {isLoading && <Loader />}\n        <ContactList />\n      </Box>\n    </Box>\n  );\n}\n"],"names":["getContacts","state","contacts","items","getFilter","filter","getIsLoading","isLoading","getError","error","getVisibleContacts","createSelector","normalizedFilter","toLowerCase","trim","name","number","includes","sort","a","b","localeCompare","generateId","nanoid","ContactForm","dispatch","useDispatch","useSelector","contactsSelectors","nameInputId","numberInputId","Box","maxWidth","sx","position","minWidth","component","onSubmit","e","preventDefault","form","currentTarget","elements","value","find","contact","Notify","reset","contactsOperations","display","flexDirection","TextField","margin","required","focused","color","InputProps","style","id","label","autoComplete","placeholder","autoFocus","pattern","title","type","InputLabelProps","shrink","Button","variant","mt","mb","Desk","styled","Subtitle","Filter","totalContacts","length","onChange","trimmedValue","target","filtersSlice","setFilter","m","fullWidth","width","height","List","Item","Icon","RiDeleteBin2Line","Name","Number","Contact","onClick","size","ContactList","visibleContacts","Loader","map","Contacts","theme","useTheme","useEffect","justifyContent","breakpoints","down","gap","alignItems","up"],"sourceRoot":""}