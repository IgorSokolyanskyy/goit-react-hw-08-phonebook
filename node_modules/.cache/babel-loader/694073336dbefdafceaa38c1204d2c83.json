{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\iSokol\\\\Documents\\\\GitHub\\\\goit-react-hw-02-phonebook\\\\src\\\\components\\\\ContactForm\\\\ContactForm.jsx\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport shortid from 'shortid';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass ContactForm extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      name: '',\n      number: ''\n    };\n    this.nameInputId = shortid.generate();\n    this.numberInputId = shortid.generate();\n\n    this.onChanchEvent = e => {\n      const {\n        name,\n        value\n      } = e.currentTarget;\n      this.setState({\n        [name]: value\n      });\n    };\n\n    this.addContactsData = e => {\n      e.preventDefault();\n      this.props.onSubmit(this.state);\n      this.reset();\n    };\n\n    this.reset = () => {\n      this.setState({\n        name: '',\n        number: ''\n      });\n    };\n  }\n\n  render() {\n    const {\n      name,\n      number\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: this.addContactsData,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: this.nameInputId,\n        children: [\"Name\", /*#__PURE__*/_jsxDEV(\"input\", {\n          id: this.nameInputId,\n          type: \"text\",\n          name: \"name\",\n          value: name,\n          onChange: this.onChanchEvent,\n          placeholder: \"Full name\",\n          pattern: \"^[a-zA-Z\\u0430-\\u044F\\u0410-\\u042F]+(([' -][a-zA-Z\\u0430-\\u044F\\u0410-\\u042F ])?[a-zA-Z\\u0430-\\u044F\\u0410-\\u042F]*)*$\",\n          title: \"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: this.numberInputId,\n        children: [\"Number\", /*#__PURE__*/_jsxDEV(\"input\", {\n          id: this.numberInputId,\n          type: \"tel\",\n          name: \"number\",\n          value: number,\n          onChange: this.onChanchEvent,\n          placeholder: \"111-11-11\",\n          pattern: \"\\\\+?\\\\d{1,4}?[-.\\\\s]?\\\\(?\\\\d{1,3}?\\\\)?[-.\\\\s]?\\\\d{1,4}[-.\\\\s]?\\\\d{1,4}[-.\\\\s]?\\\\d{1,9}\",\n          title: \"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Add contact\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nContactForm.propTypes = {\n  onSubmit: PropTypes.func.isRequired\n};\nexport default ContactForm;","map":{"version":3,"sources":["C:/Users/iSokol/Documents/GitHub/goit-react-hw-02-phonebook/src/components/ContactForm/ContactForm.jsx"],"names":["React","Component","PropTypes","shortid","ContactForm","state","name","number","nameInputId","generate","numberInputId","onChanchEvent","e","value","currentTarget","setState","addContactsData","preventDefault","props","onSubmit","reset","render","propTypes","func","isRequired"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,OAAP,MAAoB,SAApB;;;AAEA,MAAMC,WAAN,SAA0BH,SAA1B,CAAoC;AAAA;AAAA;AAAA,SAKlCI,KALkC,GAK1B;AACNC,MAAAA,IAAI,EAAE,EADA;AAENC,MAAAA,MAAM,EAAE;AAFF,KAL0B;AAAA,SAUlCC,WAVkC,GAUpBL,OAAO,CAACM,QAAR,EAVoB;AAAA,SAWlCC,aAXkC,GAWlBP,OAAO,CAACM,QAAR,EAXkB;;AAAA,SAalCE,aAbkC,GAalBC,CAAC,IAAI;AACnB,YAAM;AAAEN,QAAAA,IAAF;AAAQO,QAAAA;AAAR,UAAkBD,CAAC,CAACE,aAA1B;AACA,WAAKC,QAAL,CAAc;AAAE,SAACT,IAAD,GAAQO;AAAV,OAAd;AACD,KAhBiC;;AAAA,SAkBlCG,eAlBkC,GAkBhBJ,CAAC,IAAI;AACrBA,MAAAA,CAAC,CAACK,cAAF;AAEA,WAAKC,KAAL,CAAWC,QAAX,CAAoB,KAAKd,KAAzB;AACA,WAAKe,KAAL;AACD,KAvBiC;;AAAA,SAyBlCA,KAzBkC,GAyB1B,MAAM;AACZ,WAAKL,QAAL,CAAc;AAAET,QAAAA,IAAI,EAAE,EAAR;AAAYC,QAAAA,MAAM,EAAE;AAApB,OAAd;AACD,KA3BiC;AAAA;;AA6BlCc,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEf,MAAAA,IAAF;AAAQC,MAAAA;AAAR,QAAmB,KAAKF,KAA9B;AACA,wBACE;AAAM,MAAA,QAAQ,EAAE,KAAKW,eAArB;AAAA,8BACE;AAAO,QAAA,OAAO,EAAE,KAAKR,WAArB;AAAA,wCAEE;AACE,UAAA,EAAE,EAAE,KAAKA,WADX;AAEE,UAAA,IAAI,EAAC,MAFP;AAGE,UAAA,IAAI,EAAC,MAHP;AAIE,UAAA,KAAK,EAAEF,IAJT;AAKE,UAAA,QAAQ,EAAE,KAAKK,aALjB;AAME,UAAA,WAAW,EAAC,WANd;AAOE,UAAA,OAAO,EAAC,wHAPV;AAQE,UAAA,KAAK,EAAC,wIARR;AASE,UAAA,QAAQ;AATV;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAgBE;AAAO,QAAA,OAAO,EAAE,KAAKD,aAArB;AAAA,0CAEE;AACE,UAAA,EAAE,EAAE,KAAKA,aADX;AAEE,UAAA,IAAI,EAAC,KAFP;AAGE,UAAA,IAAI,EAAC,QAHP;AAIE,UAAA,KAAK,EAAEH,MAJT;AAKE,UAAA,QAAQ,EAAE,KAAKI,aALjB;AAME,UAAA,WAAW,EAAC,WANd;AAOE,UAAA,OAAO,EAAC,wFAPV;AAQE,UAAA,KAAK,EAAC,8FARR;AASE,UAAA,QAAQ;AATV;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cAhBF,eA+BE;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cA/BF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAmCD;;AAlEiC;;AAA9BP,W,CACGkB,S,GAAY;AACjBH,EAAAA,QAAQ,EAAEjB,SAAS,CAACqB,IAAV,CAAeC;AADR,C;AAoErB,eAAepB,WAAf","sourcesContent":["import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport shortid from 'shortid';\r\n\r\nclass ContactForm extends Component {\r\n  static propTypes = {\r\n    onSubmit: PropTypes.func.isRequired,\r\n  };\r\n\r\n  state = {\r\n    name: '',\r\n    number: '',\r\n  };\r\n\r\n  nameInputId = shortid.generate();\r\n  numberInputId = shortid.generate();\r\n\r\n  onChanchEvent = e => {\r\n    const { name, value } = e.currentTarget;\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  addContactsData = e => {\r\n    e.preventDefault();\r\n\r\n    this.props.onSubmit(this.state);\r\n    this.reset();\r\n  };\r\n\r\n  reset = () => {\r\n    this.setState({ name: '', number: '' });\r\n  };\r\n\r\n  render() {\r\n    const { name, number } = this.state;\r\n    return (\r\n      <form onSubmit={this.addContactsData}>\r\n        <label htmlFor={this.nameInputId}>\r\n          Name\r\n          <input\r\n            id={this.nameInputId}\r\n            type=\"text\"\r\n            name=\"name\"\r\n            value={name}\r\n            onChange={this.onChanchEvent}\r\n            placeholder=\"Full name\"\r\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\r\n            required\r\n          />\r\n        </label>\r\n\r\n        <label htmlFor={this.numberInputId}>\r\n          Number\r\n          <input\r\n            id={this.numberInputId}\r\n            type=\"tel\"\r\n            name=\"number\"\r\n            value={number}\r\n            onChange={this.onChanchEvent}\r\n            placeholder=\"111-11-11\"\r\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\r\n            required\r\n          />\r\n        </label>\r\n\r\n        <button type=\"submit\">Add contact</button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ContactForm;\r\n"]},"metadata":{},"sourceType":"module"}