{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\iSokol\\\\Documents\\\\GitHub\\\\goit-react-hw-02-phonebook\\\\src\\\\components\\\\App\\\\App.jsx\";\nimport React, { Component } from 'react'; // import ContactForm from '../ContactForm';\n// import ContactList from '../ContactList';\n\nimport Formik from '../ContactForm/'; // import Filter from '../Filter';\n// import contacts from 'data/contacts.json';\n// import { nanoid } from 'nanoid';\n\nimport { Container, Title, Subtitle } from './App.styled';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport class App extends Component {\n  // state = {\n  //   contacts,\n  //   filter: '',\n  // };\n  // addContact = ({ name, number }) => {\n  //   const contact = {\n  //     id: nanoid(),\n  //     name,\n  //     number,\n  //   };\n  //   this.setState(({ contacts }) => ({\n  //     contacts: [contact, ...contacts],\n  //   }));\n  // };\n  // changeFilter = e => {\n  //   this.setState({ filter: e.currentTarget.value });\n  // };\n  // deleteContact = contactId => {\n  //   this.setState(({ contacts }) => ({\n  //     contacts: contacts.filter(contact => contact.id !== contactId),\n  //   }));\n  // };\n  // getVisibleContacts = () => {\n  //   const { contacts, filter } = this.state;\n  //   const normalizedFilter = filter.toLowerCase();\n  //   return contacts.filter(contact =>\n  //     contact.name.toLowerCase().includes(normalizedFilter)\n  //   );\n  // };\n  render() {\n    // const { contacts, filter } = this.state;\n    // const visibelContacts = this.getVisibleContacts();\n    return /*#__PURE__*/_jsxDEV(Container, {\n      children: /*#__PURE__*/_jsxDEV(Formik, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["C:/Users/iSokol/Documents/GitHub/goit-react-hw-02-phonebook/src/components/App/App.jsx"],"names":["React","Component","Formik","Container","Title","Subtitle","App","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC,C,CACA;AACA;;AACA,OAAOC,MAAP,MAAmB,iBAAnB,C,CACA;AACA;AACA;;AACA,SAASC,SAAT,EAAoBC,KAApB,EAA2BC,QAA3B,QAA2C,cAA3C;;AAEA,OAAO,MAAMC,GAAN,SAAkBL,SAAlB,CAA4B;AACjC;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEAM,EAAAA,MAAM,GAAG;AACP;AACA;AAEA,wBACE,QAAC,SAAD;AAAA,6BAmBE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAnBF;AAAA;AAAA;AAAA;AAAA,YADF;AAuBD;;AAhEgC","sourcesContent":["import React, { Component } from 'react';\r\n// import ContactForm from '../ContactForm';\r\n// import ContactList from '../ContactList';\r\nimport Formik from '../ContactForm/';\r\n// import Filter from '../Filter';\r\n// import contacts from 'data/contacts.json';\r\n// import { nanoid } from 'nanoid';\r\nimport { Container, Title, Subtitle } from './App.styled';\r\n\r\nexport class App extends Component {\r\n  // state = {\r\n  //   contacts,\r\n  //   filter: '',\r\n  // };\r\n\r\n  // addContact = ({ name, number }) => {\r\n  //   const contact = {\r\n  //     id: nanoid(),\r\n  //     name,\r\n  //     number,\r\n  //   };\r\n\r\n  //   this.setState(({ contacts }) => ({\r\n  //     contacts: [contact, ...contacts],\r\n  //   }));\r\n  // };\r\n\r\n  // changeFilter = e => {\r\n  //   this.setState({ filter: e.currentTarget.value });\r\n  // };\r\n\r\n  // deleteContact = contactId => {\r\n  //   this.setState(({ contacts }) => ({\r\n  //     contacts: contacts.filter(contact => contact.id !== contactId),\r\n  //   }));\r\n  // };\r\n\r\n  // getVisibleContacts = () => {\r\n  //   const { contacts, filter } = this.state;\r\n  //   const normalizedFilter = filter.toLowerCase();\r\n\r\n  //   return contacts.filter(contact =>\r\n  //     contact.name.toLowerCase().includes(normalizedFilter)\r\n  //   );\r\n  // };\r\n\r\n  render() {\r\n    // const { contacts, filter } = this.state;\r\n    // const visibelContacts = this.getVisibleContacts();\r\n\r\n    return (\r\n      <Container>\r\n        {/* <Title>Phonebook</Title>\r\n\r\n        <ContactForm onSubmit={this.addContact} />\r\n\r\n        <Subtitle>Contacts</Subtitle>\r\n\r\n        {contacts.length > 1 && (\r\n          <Filter value={filter} onChange={this.changeFilter} />\r\n        )}\r\n        {contacts.length > 0 ? (\r\n          <ContactList\r\n            contacts={visibelContacts}\r\n            onDeleteContact={this.deleteContact}\r\n          />\r\n        ) : (\r\n          <p>Your phonebook is empty. Please add contact.</p>\r\n        )} */}\r\n\r\n        <Formik />\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}