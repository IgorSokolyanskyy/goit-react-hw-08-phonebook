{"ast":null,"code":"import _toConsumableArray from\"C:/Users/iSokol/Documents/GitHub/goit-react-hw-02-phonebook/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";import _classCallCheck from\"C:/Users/iSokol/Documents/GitHub/goit-react-hw-02-phonebook/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";import _createClass from\"C:/Users/iSokol/Documents/GitHub/goit-react-hw-02-phonebook/node_modules/@babel/runtime/helpers/esm/createClass.js\";import _inherits from\"C:/Users/iSokol/Documents/GitHub/goit-react-hw-02-phonebook/node_modules/@babel/runtime/helpers/esm/inherits.js\";import _createSuper from\"C:/Users/iSokol/Documents/GitHub/goit-react-hw-02-phonebook/node_modules/@babel/runtime/helpers/esm/createSuper.js\";import React,{Component}from'react';import ContactForm from'../ContactForm';import ContactList from'../ContactList';import Filter from'../Filter';import contacts from'data/contacts.json';import{nanoid}from'nanoid';import{Container,Title,Subtitle,P}from'./App.styled';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";export var App=/*#__PURE__*/function(_Component){_inherits(App,_Component);var _super=_createSuper(App);function App(){var _this;_classCallCheck(this,App);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_super.call.apply(_super,[this].concat(args));_this.state={contacts:contacts,filter:''};_this.addContact=function(_ref){var name=_ref.name,number=_ref.number;var contact={id:nanoid(),name:name,number:number};_this.setState(function(_ref2){var contacts=_ref2.contacts;return{contacts:[contact].concat(_toConsumableArray(contacts))};});};_this.changeFilter=function(e){_this.setState({filter:e.currentTarget.value});};_this.deleteContact=function(contactId){_this.setState(function(_ref3){var contacts=_ref3.contacts;return{contacts:contacts.filter(function(contact){return contact.id!==contactId;})};});};_this.getVisibleContacts=function(){var _this$state=_this.state,contacts=_this$state.contacts,filter=_this$state.filter;var normalizedFilter=filter.toLowerCase();return contacts.filter(function(contact){return contact.name.toLowerCase().includes(normalizedFilter);});};return _this;}_createClass(App,[{key:\"render\",value:function render(){var _this$state2=this.state,contacts=_this$state2.contacts,filter=_this$state2.filter;var visibelContacts=this.getVisibleContacts();return/*#__PURE__*/_jsxs(Container,{children:[/*#__PURE__*/_jsx(Title,{children:\"Phonebook\"}),/*#__PURE__*/_jsx(ContactForm,{onSubmit:this.addContact,contacts:contacts}),/*#__PURE__*/_jsx(Subtitle,{children:\"Contacts\"}),contacts.length>1&&/*#__PURE__*/_jsx(Filter,{value:filter,onChange:this.changeFilter}),contacts.length>0?/*#__PURE__*/_jsx(ContactList,{contacts:visibelContacts,onDeleteContact:this.deleteContact}):/*#__PURE__*/_jsx(P,{children:\"Your phonebook is empty. Please add contact.\"})]});}}]);return App;}(Component);","map":{"version":3,"sources":["C:/Users/iSokol/Documents/GitHub/goit-react-hw-02-phonebook/src/components/App/App.jsx"],"names":["React","Component","ContactForm","ContactList","Filter","contacts","nanoid","Container","Title","Subtitle","P","App","state","filter","addContact","name","number","contact","id","setState","changeFilter","e","currentTarget","value","deleteContact","contactId","getVisibleContacts","normalizedFilter","toLowerCase","includes","visibelContacts","length"],"mappings":"6sBAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,KAAiC,OAAjC,CACA,MAAOC,CAAAA,WAAP,KAAwB,gBAAxB,CACA,MAAOC,CAAAA,WAAP,KAAwB,gBAAxB,CACA,MAAOC,CAAAA,MAAP,KAAmB,WAAnB,CACA,MAAOC,CAAAA,QAAP,KAAqB,oBAArB,CACA,OAASC,MAAT,KAAuB,QAAvB,CACA,OAASC,SAAT,CAAoBC,KAApB,CAA2BC,QAA3B,CAAqCC,CAArC,KAA8C,cAA9C,C,wFAEA,UAAaC,CAAAA,GAAb,+SACEC,KADF,CACU,CACNP,QAAQ,CAARA,QADM,CAENQ,MAAM,CAAE,EAFF,CADV,OAMEC,UANF,CAMe,cAAsB,IAAnBC,CAAAA,IAAmB,MAAnBA,IAAmB,CAAbC,MAAa,MAAbA,MAAa,CACjC,GAAMC,CAAAA,OAAO,CAAG,CACdC,EAAE,CAAEZ,MAAM,EADI,CAEdS,IAAI,CAAJA,IAFc,CAGdC,MAAM,CAANA,MAHc,CAAhB,CAMA,MAAKG,QAAL,CAAc,mBAAGd,CAAAA,QAAH,OAAGA,QAAH,OAAmB,CAC/BA,QAAQ,EAAGY,OAAH,4BAAeZ,QAAf,EADuB,CAAnB,EAAd,EAGD,CAhBH,OAkBEe,YAlBF,CAkBiB,SAAAC,CAAC,CAAI,CAClB,MAAKF,QAAL,CAAc,CAAEN,MAAM,CAAEQ,CAAC,CAACC,aAAF,CAAgBC,KAA1B,CAAd,EACD,CApBH,OAsBEC,aAtBF,CAsBkB,SAAAC,SAAS,CAAI,CAC3B,MAAKN,QAAL,CAAc,mBAAGd,CAAAA,QAAH,OAAGA,QAAH,OAAmB,CAC/BA,QAAQ,CAAEA,QAAQ,CAACQ,MAAT,CAAgB,SAAAI,OAAO,QAAIA,CAAAA,OAAO,CAACC,EAAR,GAAeO,SAAnB,EAAvB,CADqB,CAAnB,EAAd,EAGD,CA1BH,OA4BEC,kBA5BF,CA4BuB,UAAM,CACzB,gBAA6B,MAAKd,KAAlC,CAAQP,QAAR,aAAQA,QAAR,CAAkBQ,MAAlB,aAAkBA,MAAlB,CACA,GAAMc,CAAAA,gBAAgB,CAAGd,MAAM,CAACe,WAAP,EAAzB,CAEA,MAAOvB,CAAAA,QAAQ,CAACQ,MAAT,CAAgB,SAAAI,OAAO,QAC5BA,CAAAA,OAAO,CAACF,IAAR,CAAaa,WAAb,GAA2BC,QAA3B,CAAoCF,gBAApC,CAD4B,EAAvB,CAAP,CAGD,CAnCH,qDAqCE,iBAAS,CACP,iBAA6B,KAAKf,KAAlC,CAAQP,QAAR,cAAQA,QAAR,CAAkBQ,MAAlB,cAAkBA,MAAlB,CACA,GAAMiB,CAAAA,eAAe,CAAG,KAAKJ,kBAAL,EAAxB,CAEA,mBACE,MAAC,SAAD,yBACE,KAAC,KAAD,wBADF,cAGE,KAAC,WAAD,EAAa,QAAQ,CAAE,KAAKZ,UAA5B,CAAwC,QAAQ,CAAET,QAAlD,EAHF,cAKE,KAAC,QAAD,uBALF,CAOGA,QAAQ,CAAC0B,MAAT,CAAkB,CAAlB,eACC,KAAC,MAAD,EAAQ,KAAK,CAAElB,MAAf,CAAuB,QAAQ,CAAE,KAAKO,YAAtC,EARJ,CAUGf,QAAQ,CAAC0B,MAAT,CAAkB,CAAlB,cACC,KAAC,WAAD,EACE,QAAQ,CAAED,eADZ,CAEE,eAAe,CAAE,KAAKN,aAFxB,EADD,cAMC,KAAC,CAAD,2DAhBJ,GADF,CAqBD,CA9DH,iBAAyBvB,SAAzB","sourcesContent":["import React, { Component } from 'react';\r\nimport ContactForm from '../ContactForm';\r\nimport ContactList from '../ContactList';\r\nimport Filter from '../Filter';\r\nimport contacts from 'data/contacts.json';\r\nimport { nanoid } from 'nanoid';\r\nimport { Container, Title, Subtitle, P } from './App.styled';\r\n\r\nexport class App extends Component {\r\n  state = {\r\n    contacts,\r\n    filter: '',\r\n  };\r\n\r\n  addContact = ({ name, number }) => {\r\n    const contact = {\r\n      id: nanoid(),\r\n      name,\r\n      number,\r\n    };\r\n\r\n    this.setState(({ contacts }) => ({\r\n      contacts: [contact, ...contacts],\r\n    }));\r\n  };\r\n\r\n  changeFilter = e => {\r\n    this.setState({ filter: e.currentTarget.value });\r\n  };\r\n\r\n  deleteContact = contactId => {\r\n    this.setState(({ contacts }) => ({\r\n      contacts: contacts.filter(contact => contact.id !== contactId),\r\n    }));\r\n  };\r\n\r\n  getVisibleContacts = () => {\r\n    const { contacts, filter } = this.state;\r\n    const normalizedFilter = filter.toLowerCase();\r\n\r\n    return contacts.filter(contact =>\r\n      contact.name.toLowerCase().includes(normalizedFilter)\r\n    );\r\n  };\r\n\r\n  render() {\r\n    const { contacts, filter } = this.state;\r\n    const visibelContacts = this.getVisibleContacts();\r\n\r\n    return (\r\n      <Container>\r\n        <Title>Phonebook</Title>\r\n\r\n        <ContactForm onSubmit={this.addContact} contacts={contacts} />\r\n\r\n        <Subtitle>Contacts</Subtitle>\r\n\r\n        {contacts.length > 1 && (\r\n          <Filter value={filter} onChange={this.changeFilter} />\r\n        )}\r\n        {contacts.length > 0 ? (\r\n          <ContactList\r\n            contacts={visibelContacts}\r\n            onDeleteContact={this.deleteContact}\r\n          />\r\n        ) : (\r\n          <P>Your phonebook is empty. Please add contact.</P>\r\n        )}\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}